package api

import (
	"github.com/TechSir3n/CityCompanion/assistance"
	_ "github.com/TechSir3n/CityCompanion/database"
	"github.com/go-telegram-bot-api/telegram-bot-api"
	"log"
	"os"
)

func CreateButton() {
	bot, err := tgbotapi.NewBotAPI(os.Getenv("TELEGRAM_API_TOKEN"))
	if err != nil {
		log.Fatalf("Error[CreateButtonFunc] : %v", err)
	}

	bot.Debug = false

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60

	updates, err := bot.GetUpdatesChan(u)
	var msgN tgbotapi.MessageConfig
	var msg tgbotapi.MessageConfig

	for update := range updates {
		if update.Message == nil {
			continue
		}

		switch update.Message.Text {
		case "/start":
			reply := "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CityCompanion! –Ø –≤–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –≥–∏–¥ –ø–æ –≥–æ—Ä–æ–¥—É. " +
				"–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–≤–æ–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –∏ —è –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞–π—Ç–∏ –ª—É—á—à–∏–µ –º–µ—Å—Ç–∞ –≤ –≥–æ—Ä–æ–¥–µ: –æ—Ç —É—é—Ç–Ω—ã—Ö –∫–∞—Ñ–µ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –¥–æ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤ –∏ –ø–∞—Ä–∫–æ–≤ —Å –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–∞–º–∏." +
				"–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏ –∑–∞–ø—Ä–æ—Å—ã, –∏ —è —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –ª—É—á—à–∏–º–∏ –º–µ—Å—Ç–∞–º–∏ –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ! "
			msg = tgbotapi.NewMessage(update.Message.Chat.ID, reply)
			msg.ReplyMarkup = createMainMenu()

			bot.Send(msg)
		case "‚ùóÔ∏è–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é":
			msgN = tgbotapi.NewMessage(update.Message.Chat.ID, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: ")
			msgN.ReplyMarkup = createNeedAction()
			bot.Send(msgN)
		case "üìç –ü–æ–¥–µ–ª–∏—Ç—Å—è —Å –∫–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è":
			AskCoordinates(bot, update)
		case "üîç –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞":
			assistance.AdjuctRadiusSearch(bot, update)
		case "/about":
			assistance.AboutBot(bot, update)
		case "/showmenu":
			msgN = tgbotapi.NewMessage(update.Message.Chat.ID, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: ")
			msgN.ReplyMarkup = createNeedAction()
			bot.Send(msgN)
		case "/sendlocation":
			AskCoordinates(bot, update)
		case "/adjustradius":
			assistance.AdjuctRadiusSearch(bot, update)
		case "üçΩÔ∏è –†–µ—Å—Ç–æ—Ä–∞–Ω—ã":
			handlePlaceCategory(bot, update, updates, "13065")
		case "üçµ –ö–∞—Ñ–µ, –ö–æ—Ñ–µ–π–Ω–∏ –∏ –ß–∞–π–Ω—ã–µ –î–æ–º–∞":
			handlePlaceCategory(bot, update, updates, "13032")
		case "üõí –†–æ–∑–Ω–∏—á–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏ –ø–∏—Ç–∞–Ω–∏—è –∏ –Ω–∞–ø–∏—Ç–∫–∞–º–∏":
			handlePlaceCategory(bot, update, updates, "17142")
		case "üèñÔ∏è –ü–ª—è–∂–∏":
			handlePlaceCategory(bot, update, updates, "16003")
		case "üèõÔ∏è –î–æ—Å—Ç–æ–ø—Ä–µ–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏":
			handlePlaceCategory(bot, update, updates, "16000")
		case "üå≥ –ì–æ—Ä–æ–¥—Å–∫–∏–µ –ø–∞—Ä–∫–∏":
			handlePlaceCategory(bot, update, updates, "16032")
		case "üèãÔ∏è‚Äç‚ôÄÔ∏è –¢—Ä–µ–Ω–∞–∂–µ—Ä–Ω—ã–π –∑–∞–ª –∏ —Å—Ç—É–¥–∏–∏":
			handlePlaceCategory(bot, update, updates, "18021")
		case "üíÜ‚Äç‚ôÄÔ∏è –£—Å–ª—É–≥–∏ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è –∏ –∫—Ä–∞—Å–æ—Ç—ã":
			handlePlaceCategory(bot, update, updates, "11061")
		case "üíá‚Äç‚ôÇÔ∏è –ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–∏–µ":
			handlePlaceCategory(bot, update, updates, "11062")
		case "üõçÔ∏è –ú–∞–≥–∞–∑–∏–Ω—ã –æ–¥–µ–∂–¥—ã":
			handlePlaceCategory(bot, update, updates, "17043")
		case "üçª –ë–∞—Ä—ã":
			handlePlaceCategory(bot, update, updates, "13003")
		default:
			handleRadiusResponse(bot, update, updates)
			handleGeocoding(bot, update)
		}
	}
}

func handlePlaceCategory(bot *tgbotapi.BotAPI, update tgbotapi.Update, updates tgbotapi.UpdatesChannel, category string) {
	limitPhoto, limitPlace := assistance.AskLimit(bot, update, updates)
	if isCoordinatesShared() {
		GetNearbyPlaces(limitPlace, limitPhoto, category, bot, update)
	} else {
		assistance.WarningLocation(bot, update)
	}
}

func createNeedAction() tgbotapi.ReplyKeyboardMarkup {
	replyMarkup := tgbotapi.ReplyKeyboardMarkup{
		Keyboard: [][]tgbotapi.KeyboardButton{
			{
				tgbotapi.NewKeyboardButton("üçΩÔ∏è –†–µ—Å—Ç–æ—Ä–∞–Ω—ã"),
				tgbotapi.NewKeyboardButton("üçµ –ö–∞—Ñ–µ, –ö–æ—Ñ–µ–π–Ω–∏ –∏ –ß–∞–π–Ω—ã–µ –î–æ–º–∞"),
				tgbotapi.NewKeyboardButton("üõí –†–æ–∑–Ω–∏—á–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏ –ø–∏—Ç–∞–Ω–∏—è –∏ –Ω–∞–ø–∏—Ç–∫–∞–º–∏"),
			},
			{
				tgbotapi.NewKeyboardButton("üèñÔ∏è –ü–ª—è–∂–∏"),
				tgbotapi.NewKeyboardButton("üèõÔ∏è –î–æ—Å—Ç–æ–ø—Ä–µ–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"),
				tgbotapi.NewKeyboardButton("üå≥ –ì–æ—Ä–æ–¥—Å–∫–∏–µ –ø–∞—Ä–∫–∏"),
			},
			{
				tgbotapi.NewKeyboardButton("üèãÔ∏è‚Äç‚ôÄÔ∏è –¢—Ä–µ–Ω–∞–∂–µ—Ä–Ω—ã–π –∑–∞–ª –∏ —Å—Ç—É–¥–∏–∏"),
				tgbotapi.NewKeyboardButton("üíÜ‚Äç‚ôÄÔ∏è –£—Å–ª—É–≥–∏ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è –∏ –∫—Ä–∞—Å–æ—Ç—ã"),
				tgbotapi.NewKeyboardButton("üíá‚Äç‚ôÇÔ∏è –ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–∏–µ"),
			},
			{
				tgbotapi.NewKeyboardButtonContact("üõçÔ∏è –ú–∞–≥–∞–∑–∏–Ω—ã –æ–¥–µ–∂–¥—ã"),
				tgbotapi.NewKeyboardButton("üçª –ë–∞—Ä—ã"),
			},
		},
		ResizeKeyboard: true,
	}

	return replyMarkup
}

func createMainMenu() tgbotapi.ReplyKeyboardMarkup {
	menu := tgbotapi.ReplyKeyboardMarkup{
		Keyboard: [][]tgbotapi.KeyboardButton{
			{
				tgbotapi.NewKeyboardButton("‚ùóÔ∏è–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é"),
				tgbotapi.NewKeyboardButton("üìç –ü–æ–¥–µ–ª–∏—Ç—Å—è —Å –∫–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è"),
				tgbotapi.NewKeyboardButton("üîç –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞"),
			},
		},
		ResizeKeyboard: true,
	}
	return menu
}
